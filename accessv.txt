ops_triton not available No module named 'pycuda'
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (1,) op:LoadOps.FROMCPU>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<0>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (1,) op:LoadOps.FROMCPU>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<1>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
0
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<2>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<3>
BEFORE optim |  True  | self.m[0].data [[0. 0. 0.]] self.v[0].data [[0. 0. 0.]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<4>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<4> -> (1, 3, 1, 1)-<5>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<6>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<6> -> (3, 3)-<7>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<7> -> (3, 3, 1, 1)-<8>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<5>, (3, 3, 1, 1)-<8> -> (1, 3)-<9>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<9> -> (1, 3, 1, 1)-<10>
[<ReduceOps.MAX: 2>] : (1, 3)-<9> -> (1, 1)-<11>
[<MovementOps.EXPAND: 3>] : (1, 1)-<11> -> (1, 3)-<12>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<9>, (1, 3)-<12> -> (1, 3)-<13>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<13> -> (1, 3, 1, 1)-<14>
[<ReduceOps.SUM: 1>] : (1, 3)-<13> -> (1, 1)-<15>
[<MovementOps.EXPAND: 3>] : (1, 1)-<15> -> (1, 3)-<16>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<16> -> (1, 3, 1, 1)-<17>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<9>, (1, 3)-<12> -> (1, 3)-<18>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<19>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<20>
[<MovementOps.RESHAPE: 1>] : (1,)-<20> -> (1, 1)-<21>
[<MovementOps.EXPAND: 3>] : (1, 1)-<21> -> (1, 3)-<22>
[<ReduceOps.SUM: 1>] : (1, 3)-<18> -> (1, 1)-<23>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<19>, (1, 3)-<22>, (1, 1)-<23> -> (1, 1)-<24>
[<MovementOps.EXPAND: 3>] : (1, 1)-<24> -> (1, 3)-<25>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<18>, (1, 3)-<25>, (1, 3)-<19>, (1, 3)-<22> -> (1, 1)-<26>
[<MovementOps.EXPAND: 3>] : (1, 1)-<26> -> (1, 3)-<27>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<27> -> (1, 3, 1, 1)-<28>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<18> -> (1, 3, 1, 1)-<29>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<25> -> (1, 3, 1, 1)-<30>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<19> -> (1, 3, 1, 1)-<31>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<22> -> (1, 3, 1, 1)-<32>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<10>, (1, 3, 1, 1)-<14>, (1, 3, 1, 1)-<17>, (1, 3, 1, 1)-<28>, (1, 3, 1, 1)-<29>, (1, 3, 1, 1)-<30>, (1, 3, 1, 1)-<31>, (1, 3, 1, 1)-<32> -> (1, 3, 1, 1)-<33>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<6> -> (3, 3, 1, 1)-<34>
[<ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<33>, (3, 3, 1, 1)-<34> -> (1, 3, 1, 1)-<35>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<35> -> (1, 3)-<36>
t.grad:  [[1.334759   0.75527155 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<4> -> (3, 1, 1, 1)-<37>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<33> -> (3, 1, 1, 1)-<38>
[<ProcessingOps.CONV: 1>] : (3, 1, 1, 1)-<37>, (3, 1, 1, 1)-<38> -> (3, 3, 1, 1)-<39>
[<MovementOps.RESHAPE: 1>] : (3, 3, 1, 1)-<39> -> (3, 3)-<40>
t.grad:  [[ 2.669518    1.5105431   0.        ]
 [ 1.334759    0.75527155  0.        ]
 [-2.669518   -1.5105431   0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:LoadOps.FROMCPU> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:LoadOps.FROMCPU> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<41>
[<MovementOps.RESHAPE: 1>] : (1,)-<41> -> (1, 1)-<42>
[<MovementOps.EXPAND: 3>] : (1, 1)-<42> -> (1, 3)-<43>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<44>
[<MovementOps.RESHAPE: 1>] : (1,)-<44> -> (1, 1)-<45>
[<MovementOps.EXPAND: 3>] : (1, 1)-<45> -> (1, 3)-<46>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<43>, (1, 3)-<2>, (1, 3)-<46>, (1, 3)-<36> -> (1, 3)-<2>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<47>
[<MovementOps.RESHAPE: 1>] : (1,)-<47> -> (1, 1)-<48>
[<MovementOps.EXPAND: 3>] : (1, 1)-<48> -> (1, 3)-<49>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<50>
[<MovementOps.RESHAPE: 1>] : (1,)-<50> -> (1, 1)-<51>
[<MovementOps.EXPAND: 3>] : (1, 1)-<51> -> (1, 3)-<52>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<49>, (1, 3)-<3>, (1, 3)-<52>, (1, 3)-<36>, (1, 3)-<36> -> (1, 3)-<3>
AFTER optim |  True  | self.m[0].data [[0.1334759  0.07552715 0.        ]] self.v[0].data [[0.00178158 0.00057044 0.        ]]
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<53>
[<BinaryOps.ADD: 1>] : (1,)-<0>, (1,)-<53> -> (1,)-<54>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<55>
[<MovementOps.RESHAPE: 1>] : (1,)-<55> -> (1, 1)-<56>
[<MovementOps.EXPAND: 3>] : (1, 1)-<56> -> (3, 3)-<57>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<58>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<59>
[<MovementOps.RESHAPE: 1>] : (1,)-<59> -> (1, 1)-<60>
[<MovementOps.EXPAND: 3>] : (1, 1)-<60> -> (3, 3)-<61>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<57>, (3, 3)-<58>, (3, 3)-<61>, (3, 3)-<40> -> (3, 3)-<62>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<63>
[<MovementOps.RESHAPE: 1>] : (1,)-<63> -> (1, 1)-<64>
[<MovementOps.EXPAND: 3>] : (1, 1)-<64> -> (3, 3)-<65>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<66>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<67>
[<MovementOps.RESHAPE: 1>] : (1,)-<67> -> (1, 1)-<68>
[<MovementOps.EXPAND: 3>] : (1, 1)-<68> -> (3, 3)-<69>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<65>, (3, 3)-<66>, (3, 3)-<69>, (3, 3)-<40>, (3, 3)-<40> -> (3, 3)-<70>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<71>
[<MovementOps.RESHAPE: 1>] : (1,)-<71> -> (1, 1)-<72>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<73>
[<MovementOps.RESHAPE: 1>] : (1,)-<73> -> (1, 1)-<74>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<75>
[<MovementOps.RESHAPE: 1>] : (1,)-<75> -> (1, 1)-<76>
[<MovementOps.RESHAPE: 1>] : (1,)-<0> -> (1, 1)-<77>
[<MovementOps.RESHAPE: 1>] : (1,)-<53> -> (1, 1)-<78>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<79>
[<MovementOps.RESHAPE: 1>] : (1,)-<79> -> (1, 1)-<80>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<81>
[<MovementOps.RESHAPE: 1>] : (1,)-<81> -> (1, 1)-<82>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<83>
[<MovementOps.RESHAPE: 1>] : (1,)-<83> -> (1, 1)-<84>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<72>, (1, 1)-<74>, (1, 1)-<76>, (1, 1)-<77>, (1, 1)-<78>, (1, 1)-<80>, (1, 1)-<82>, (1, 1)-<84>, (1, 1)-<77>, (1, 1)-<78> -> (1, 1)-<85>
[<MovementOps.EXPAND: 3>] : (1, 1)-<85> -> (1, 3)-<86>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<87>
[<MovementOps.RESHAPE: 1>] : (1,)-<87> -> (1, 1)-<88>
[<MovementOps.EXPAND: 3>] : (1, 1)-<88> -> (1, 3)-<89>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<90>
[<MovementOps.RESHAPE: 1>] : (1,)-<90> -> (1, 1)-<91>
[<MovementOps.EXPAND: 3>] : (1, 1)-<91> -> (1, 3)-<92>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<4>, (1, 3)-<86>, (1, 3)-<43>, (1, 3)-<2>, (1, 3)-<46>, (1, 3)-<36>, (1, 3)-<49>, (1, 3)-<3>, (1, 3)-<52>, (1, 3)-<36>, (1, 3)-<36>, (1, 3)-<89>, (1, 3)-<92> -> (1, 3)-<4>
[<MovementOps.EXPAND: 3>] : (1, 1)-<85> -> (3, 3)-<93>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<94>
[<MovementOps.RESHAPE: 1>] : (1,)-<94> -> (1, 1)-<95>
[<MovementOps.EXPAND: 3>] : (1, 1)-<95> -> (3, 3)-<96>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<97>
[<MovementOps.RESHAPE: 1>] : (1,)-<97> -> (1, 1)-<98>
[<MovementOps.EXPAND: 3>] : (1, 1)-<98> -> (3, 3)-<99>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<6>, (3, 3)-<93>, (3, 3)-<57>, (3, 3)-<58>, (3, 3)-<61>, (3, 3)-<40>, (3, 3)-<65>, (3, 3)-<66>, (3, 3)-<69>, (3, 3)-<40>, (3, 3)-<40>, (3, 3)-<96>, (3, 3)-<99> -> (3, 3)-<6>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<100>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<101>
BEFORE optim |  False  | self.m[0].data [[0. 0. 0.]] self.v[0].data [[0. 0. 0.]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<102>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<102> -> (1, 3, 1, 1)-<103>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<104>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<104> -> (3, 3)-<105>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<105> -> (3, 3, 1, 1)-<106>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<103>, (3, 3, 1, 1)-<106> -> (1, 3)-<107>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<107> -> (1, 3, 1, 1)-<108>
[<ReduceOps.MAX: 2>] : (1, 3)-<107> -> (1, 1)-<109>
[<MovementOps.EXPAND: 3>] : (1, 1)-<109> -> (1, 3)-<110>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<107>, (1, 3)-<110> -> (1, 3)-<111>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<111> -> (1, 3, 1, 1)-<112>
[<ReduceOps.SUM: 1>] : (1, 3)-<111> -> (1, 1)-<113>
[<MovementOps.EXPAND: 3>] : (1, 1)-<113> -> (1, 3)-<114>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<114> -> (1, 3, 1, 1)-<115>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<107>, (1, 3)-<110> -> (1, 3)-<116>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<117>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<118>
[<MovementOps.RESHAPE: 1>] : (1,)-<118> -> (1, 1)-<119>
[<MovementOps.EXPAND: 3>] : (1, 1)-<119> -> (1, 3)-<120>
[<ReduceOps.SUM: 1>] : (1, 3)-<116> -> (1, 1)-<121>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<117>, (1, 3)-<120>, (1, 1)-<121> -> (1, 1)-<122>
[<MovementOps.EXPAND: 3>] : (1, 1)-<122> -> (1, 3)-<123>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<116>, (1, 3)-<123>, (1, 3)-<117>, (1, 3)-<120> -> (1, 1)-<124>
[<MovementOps.EXPAND: 3>] : (1, 1)-<124> -> (1, 3)-<125>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<125> -> (1, 3, 1, 1)-<126>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<116> -> (1, 3, 1, 1)-<127>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<123> -> (1, 3, 1, 1)-<128>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<117> -> (1, 3, 1, 1)-<129>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<120> -> (1, 3, 1, 1)-<130>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<108>, (1, 3, 1, 1)-<112>, (1, 3, 1, 1)-<115>, (1, 3, 1, 1)-<126>, (1, 3, 1, 1)-<127>, (1, 3, 1, 1)-<128>, (1, 3, 1, 1)-<129>, (1, 3, 1, 1)-<130> -> (1, 3, 1, 1)-<131>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<104> -> (3, 3, 1, 1)-<132>
[<ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<131>, (3, 3, 1, 1)-<132> -> (1, 3, 1, 1)-<133>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<133> -> (1, 3)-<134>
t.grad:  [[1.334759   0.75527155 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<102> -> (3, 1, 1, 1)-<135>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<131> -> (3, 1, 1, 1)-<136>
[<ProcessingOps.CONV: 1>] : (3, 1, 1, 1)-<135>, (3, 1, 1, 1)-<136> -> (3, 3, 1, 1)-<137>
[<MovementOps.RESHAPE: 1>] : (3, 3, 1, 1)-<137> -> (3, 3)-<138>
t.grad:  [[ 2.669518    1.5105431   0.        ]
 [ 1.334759    0.75527155  0.        ]
 [-2.669518   -1.5105431   0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:LoadOps.FROMCPU> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:LoadOps.FROMCPU> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<139>
[<MovementOps.RESHAPE: 1>] : (1,)-<139> -> (1, 1)-<140>
[<MovementOps.EXPAND: 3>] : (1, 1)-<140> -> (1, 3)-<141>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<142>
[<MovementOps.RESHAPE: 1>] : (1,)-<142> -> (1, 1)-<143>
[<MovementOps.EXPAND: 3>] : (1, 1)-<143> -> (1, 3)-<144>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<141>, (1, 3)-<100>, (1, 3)-<144>, (1, 3)-<134> -> (1, 3)-<100>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<145>
[<MovementOps.RESHAPE: 1>] : (1,)-<145> -> (1, 1)-<146>
[<MovementOps.EXPAND: 3>] : (1, 1)-<146> -> (1, 3)-<147>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<148>
[<MovementOps.RESHAPE: 1>] : (1,)-<148> -> (1, 1)-<149>
[<MovementOps.EXPAND: 3>] : (1, 1)-<149> -> (1, 3)-<150>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<147>, (1, 3)-<101>, (1, 3)-<150>, (1, 3)-<134>, (1, 3)-<134> -> (1, 3)-<101>
AFTER optim |  False  | self.m[0].data [[0.1334759  0.07552715 0.        ]] self.v[0].data [[0.00178158 0.00057044 0.        ]]
########################################
1
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:BinaryOps.ADD>
BEFORE optim |  True  | self.m[0].data [[0.1334759  0.07552715 0.        ]] self.v[0].data [[0.00178158 0.00057044 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:BinaryOps.ADD>
x <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<36> -> (1, 3, 1, 1)-<151>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<4> -> (1, 3, 1, 1)-<152>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<6> -> (3, 3)-<153>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<153> -> (3, 3, 1, 1)-<154>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<152>, (3, 3, 1, 1)-<154> -> (1, 3)-<155>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<155> -> (1, 3, 1, 1)-<156>
[<ReduceOps.MAX: 2>] : (1, 3)-<155> -> (1, 1)-<157>
[<MovementOps.EXPAND: 3>] : (1, 1)-<157> -> (1, 3)-<158>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<155>, (1, 3)-<158> -> (1, 3)-<159>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<159> -> (1, 3, 1, 1)-<160>
[<ReduceOps.SUM: 1>] : (1, 3)-<159> -> (1, 1)-<161>
[<MovementOps.EXPAND: 3>] : (1, 1)-<161> -> (1, 3)-<162>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<162> -> (1, 3, 1, 1)-<163>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<155>, (1, 3)-<158> -> (1, 3)-<164>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<165>
[<MovementOps.RESHAPE: 1>] : (1,)-<165> -> (1, 1)-<166>
[<MovementOps.EXPAND: 3>] : (1, 1)-<166> -> (1, 3)-<167>
[<ReduceOps.SUM: 1>] : (1, 3)-<164> -> (1, 1)-<168>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<19>, (1, 3)-<167>, (1, 1)-<168> -> (1, 1)-<169>
[<MovementOps.EXPAND: 3>] : (1, 1)-<169> -> (1, 3)-<170>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<164>, (1, 3)-<170>, (1, 3)-<19>, (1, 3)-<167> -> (1, 1)-<171>
[<MovementOps.EXPAND: 3>] : (1, 1)-<171> -> (1, 3)-<172>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<172> -> (1, 3, 1, 1)-<173>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<164> -> (1, 3, 1, 1)-<174>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<170> -> (1, 3, 1, 1)-<175>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<19> -> (1, 3, 1, 1)-<176>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<167> -> (1, 3, 1, 1)-<177>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<156>, (1, 3, 1, 1)-<160>, (1, 3, 1, 1)-<163>, (1, 3, 1, 1)-<173>, (1, 3, 1, 1)-<174>, (1, 3, 1, 1)-<175>, (1, 3, 1, 1)-<176>, (1, 3, 1, 1)-<177> -> (1, 3, 1, 1)-<178>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<6> -> (3, 3, 1, 1)-<179>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<151>, (1, 3, 1, 1)-<178>, (3, 3, 1, 1)-<179> -> (1, 3)-<180>
t.grad:  [[2.6678081e+00 1.5085926e+00 2.0905372e-03]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>

HIT <LB (3, 3) op:MovementOps.RESHAPE> <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (3, 3) op:BinaryOps.ADD>
x <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<40> -> (3, 3, 1, 1)-<181>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<4> -> (3, 1, 1, 1)-<182>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<178> -> (3, 1, 1, 1)-<183>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (3, 3, 1, 1)-<181>, (3, 1, 1, 1)-<182>, (3, 1, 1, 1)-<183> -> (3, 3)-<184>
t.grad:  [[ 5.338003   3.020351   0.       ]
 [ 2.6681046  1.5096679  0.       ]
 [-5.3397975 -3.0213661  0.       ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<185>
[<MovementOps.RESHAPE: 1>] : (1,)-<185> -> (1, 1)-<186>
[<MovementOps.EXPAND: 3>] : (1, 1)-<186> -> (1, 3)-<187>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<188>
[<MovementOps.RESHAPE: 1>] : (1,)-<188> -> (1, 1)-<189>
[<MovementOps.EXPAND: 3>] : (1, 1)-<189> -> (1, 3)-<190>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<187>, (1, 3)-<2>, (1, 3)-<190>, (1, 3)-<180> -> (1, 3)-<2>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<191>
[<MovementOps.RESHAPE: 1>] : (1,)-<191> -> (1, 1)-<192>
[<MovementOps.EXPAND: 3>] : (1, 1)-<192> -> (1, 3)-<193>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<194>
[<MovementOps.RESHAPE: 1>] : (1,)-<194> -> (1, 1)-<195>
[<MovementOps.EXPAND: 3>] : (1, 1)-<195> -> (1, 3)-<196>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<193>, (1, 3)-<3>, (1, 3)-<196>, (1, 3)-<180>, (1, 3)-<180> -> (1, 3)-<3>
AFTER optim |  True  | self.m[0].data [[3.8690913e-01 2.1883370e-01 2.0905373e-04]] self.v[0].data [[8.8970000e-03 2.8457164e-03 4.3703459e-09]]
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<197>
[<BinaryOps.ADD: 1>] : (1,)-<54>, (1,)-<197> -> (1,)-<198>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<199>
[<MovementOps.RESHAPE: 1>] : (1,)-<199> -> (1, 1)-<200>
[<MovementOps.EXPAND: 3>] : (1, 1)-<200> -> (3, 3)-<201>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<202>
[<MovementOps.RESHAPE: 1>] : (1,)-<202> -> (1, 1)-<203>
[<MovementOps.EXPAND: 3>] : (1, 1)-<203> -> (3, 3)-<204>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<201>, (3, 3)-<62>, (3, 3)-<204>, (3, 3)-<184> -> (3, 3)-<62>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<205>
[<MovementOps.RESHAPE: 1>] : (1,)-<205> -> (1, 1)-<206>
[<MovementOps.EXPAND: 3>] : (1, 1)-<206> -> (3, 3)-<207>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<208>
[<MovementOps.RESHAPE: 1>] : (1,)-<208> -> (1, 1)-<209>
[<MovementOps.EXPAND: 3>] : (1, 1)-<209> -> (3, 3)-<210>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<207>, (3, 3)-<70>, (3, 3)-<210>, (3, 3)-<184>, (3, 3)-<184> -> (3, 3)-<70>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<211>
[<MovementOps.RESHAPE: 1>] : (1,)-<211> -> (1, 1)-<212>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<213>
[<MovementOps.RESHAPE: 1>] : (1,)-<213> -> (1, 1)-<214>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<215>
[<MovementOps.RESHAPE: 1>] : (1,)-<215> -> (1, 1)-<216>
[<MovementOps.RESHAPE: 1>] : (1,)-<54> -> (1, 1)-<217>
[<MovementOps.RESHAPE: 1>] : (1,)-<197> -> (1, 1)-<218>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<219>
[<MovementOps.RESHAPE: 1>] : (1,)-<219> -> (1, 1)-<220>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<221>
[<MovementOps.RESHAPE: 1>] : (1,)-<221> -> (1, 1)-<222>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<223>
[<MovementOps.RESHAPE: 1>] : (1,)-<223> -> (1, 1)-<224>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<212>, (1, 1)-<214>, (1, 1)-<216>, (1, 1)-<217>, (1, 1)-<218>, (1, 1)-<220>, (1, 1)-<222>, (1, 1)-<224>, (1, 1)-<217>, (1, 1)-<218> -> (1, 1)-<225>
[<MovementOps.EXPAND: 3>] : (1, 1)-<225> -> (1, 3)-<226>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<227>
[<MovementOps.RESHAPE: 1>] : (1,)-<227> -> (1, 1)-<228>
[<MovementOps.EXPAND: 3>] : (1, 1)-<228> -> (1, 3)-<229>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<230>
[<MovementOps.RESHAPE: 1>] : (1,)-<230> -> (1, 1)-<231>
[<MovementOps.EXPAND: 3>] : (1, 1)-<231> -> (1, 3)-<232>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<4>, (1, 3)-<226>, (1, 3)-<187>, (1, 3)-<2>, (1, 3)-<190>, (1, 3)-<180>, (1, 3)-<193>, (1, 3)-<3>, (1, 3)-<196>, (1, 3)-<180>, (1, 3)-<180>, (1, 3)-<229>, (1, 3)-<232> -> (1, 3)-<4>
[<MovementOps.EXPAND: 3>] : (1, 1)-<225> -> (3, 3)-<233>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<234>
[<MovementOps.RESHAPE: 1>] : (1,)-<234> -> (1, 1)-<235>
[<MovementOps.EXPAND: 3>] : (1, 1)-<235> -> (3, 3)-<236>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<237>
[<MovementOps.RESHAPE: 1>] : (1,)-<237> -> (1, 1)-<238>
[<MovementOps.EXPAND: 3>] : (1, 1)-<238> -> (3, 3)-<239>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<6>, (3, 3)-<233>, (3, 3)-<201>, (3, 3)-<62>, (3, 3)-<204>, (3, 3)-<184>, (3, 3)-<207>, (3, 3)-<70>, (3, 3)-<210>, (3, 3)-<184>, (3, 3)-<184>, (3, 3)-<236>, (3, 3)-<239> -> (3, 3)-<6>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.POW>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.SUB>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.POW>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.SUB>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.POW>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.SUB>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:BinaryOps.ADD>
BEFORE optim |  False  | self.m[0].data [[0.1334759  0.07552715 0.        ]] self.v[0].data [[0.00178158 0.00057044 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:BinaryOps.ADD>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<134> -> (1, 3, 1, 1)-<240>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<102> -> (1, 3, 1, 1)-<241>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<242>
[<MovementOps.RESHAPE: 1>] : (1,)-<242> -> (1, 1)-<243>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<244>
[<MovementOps.RESHAPE: 1>] : (1,)-<244> -> (1, 1)-<245>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<246>
[<MovementOps.RESHAPE: 1>] : (1,)-<246> -> (1, 1)-<247>
[<MovementOps.RESHAPE: 1>] : (1,)-<1> -> (1, 1)-<248>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<249>
[<MovementOps.RESHAPE: 1>] : (1,)-<249> -> (1, 1)-<250>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<251>
[<MovementOps.RESHAPE: 1>] : (1,)-<251> -> (1, 1)-<252>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<253>
[<MovementOps.RESHAPE: 1>] : (1,)-<253> -> (1, 1)-<254>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<255>
[<MovementOps.RESHAPE: 1>] : (1,)-<255> -> (1, 1)-<256>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<243>, (1, 1)-<245>, (1, 1)-<247>, (1, 1)-<248>, (1, 1)-<250>, (1, 1)-<252>, (1, 1)-<254>, (1, 1)-<256>, (1, 1)-<248>, (1, 1)-<250> -> (1, 1)-<257>
[<MovementOps.EXPAND: 3>] : (1, 1)-<257> -> (1, 3)-<258>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<258> -> (1, 3, 1, 1)-<259>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<141> -> (1, 3, 1, 1)-<260>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<100> -> (1, 3, 1, 1)-<261>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<144> -> (1, 3, 1, 1)-<262>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<147> -> (1, 3, 1, 1)-<263>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<101> -> (1, 3, 1, 1)-<264>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<150> -> (1, 3, 1, 1)-<265>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<266>
[<MovementOps.RESHAPE: 1>] : (1,)-<266> -> (1, 1)-<267>
[<MovementOps.EXPAND: 3>] : (1, 1)-<267> -> (1, 3)-<268>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<268> -> (1, 3, 1, 1)-<269>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<270>
[<MovementOps.RESHAPE: 1>] : (1,)-<270> -> (1, 1)-<271>
[<MovementOps.EXPAND: 3>] : (1, 1)-<271> -> (1, 3)-<272>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<272> -> (1, 3, 1, 1)-<273>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<241>, (1, 3, 1, 1)-<259>, (1, 3, 1, 1)-<260>, (1, 3, 1, 1)-<261>, (1, 3, 1, 1)-<262>, (1, 3, 1, 1)-<240>, (1, 3, 1, 1)-<263>, (1, 3, 1, 1)-<264>, (1, 3, 1, 1)-<265>, (1, 3, 1, 1)-<240>, (1, 3, 1, 1)-<240>, (1, 3, 1, 1)-<269>, (1, 3, 1, 1)-<273> -> (1, 3, 1, 1)-<274>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<104> -> (3, 3)-<275>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<275> -> (3, 3, 1, 1)-<276>
[<MovementOps.EXPAND: 3>] : (1, 1)-<257> -> (3, 3)-<277>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<277> -> (3, 3)-<278>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<278> -> (3, 3, 1, 1)-<279>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<280>
[<MovementOps.RESHAPE: 1>] : (1,)-<280> -> (1, 1)-<281>
[<MovementOps.EXPAND: 3>] : (1, 1)-<281> -> (3, 3)-<282>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<282> -> (3, 3)-<283>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<283> -> (3, 3, 1, 1)-<284>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<285>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<285> -> (3, 3)-<286>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<286> -> (3, 3, 1, 1)-<287>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<288>
[<MovementOps.RESHAPE: 1>] : (1,)-<288> -> (1, 1)-<289>
[<MovementOps.EXPAND: 3>] : (1, 1)-<289> -> (3, 3)-<290>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<290> -> (3, 3)-<291>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<291> -> (3, 3, 1, 1)-<292>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<138> -> (3, 3)-<293>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<293> -> (3, 3, 1, 1)-<294>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<295>
[<MovementOps.RESHAPE: 1>] : (1,)-<295> -> (1, 1)-<296>
[<MovementOps.EXPAND: 3>] : (1, 1)-<296> -> (3, 3)-<297>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<297> -> (3, 3)-<298>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<298> -> (3, 3, 1, 1)-<299>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<300>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<300> -> (3, 3)-<301>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<301> -> (3, 3, 1, 1)-<302>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<303>
[<MovementOps.RESHAPE: 1>] : (1,)-<303> -> (1, 1)-<304>
[<MovementOps.EXPAND: 3>] : (1, 1)-<304> -> (3, 3)-<305>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<305> -> (3, 3)-<306>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<306> -> (3, 3, 1, 1)-<307>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<308>
[<MovementOps.RESHAPE: 1>] : (1,)-<308> -> (1, 1)-<309>
[<MovementOps.EXPAND: 3>] : (1, 1)-<309> -> (3, 3)-<310>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<310> -> (3, 3)-<311>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<311> -> (3, 3, 1, 1)-<312>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<313>
[<MovementOps.RESHAPE: 1>] : (1,)-<313> -> (1, 1)-<314>
[<MovementOps.EXPAND: 3>] : (1, 1)-<314> -> (3, 3)-<315>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<315> -> (3, 3)-<316>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<316> -> (3, 3, 1, 1)-<317>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3, 1, 1)-<276>, (3, 3, 1, 1)-<279>, (3, 3, 1, 1)-<284>, (3, 3, 1, 1)-<287>, (3, 3, 1, 1)-<292>, (3, 3, 1, 1)-<294>, (3, 3, 1, 1)-<299>, (3, 3, 1, 1)-<302>, (3, 3, 1, 1)-<307>, (3, 3, 1, 1)-<294>, (3, 3, 1, 1)-<294>, (3, 3, 1, 1)-<312>, (3, 3, 1, 1)-<317> -> (3, 3, 1, 1)-<318>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<274>, (3, 3, 1, 1)-<318> -> (1, 3)-<319>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<319> -> (1, 3, 1, 1)-<320>
[<ReduceOps.MAX: 2>] : (1, 3)-<319> -> (1, 1)-<321>
[<MovementOps.EXPAND: 3>] : (1, 1)-<321> -> (1, 3)-<322>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<319>, (1, 3)-<322> -> (1, 3)-<323>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<323> -> (1, 3, 1, 1)-<324>
[<ReduceOps.SUM: 1>] : (1, 3)-<323> -> (1, 1)-<325>
[<MovementOps.EXPAND: 3>] : (1, 1)-<325> -> (1, 3)-<326>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<326> -> (1, 3, 1, 1)-<327>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<319>, (1, 3)-<322> -> (1, 3)-<328>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<329>
[<MovementOps.RESHAPE: 1>] : (1,)-<329> -> (1, 1)-<330>
[<MovementOps.EXPAND: 3>] : (1, 1)-<330> -> (1, 3)-<331>
[<ReduceOps.SUM: 1>] : (1, 3)-<328> -> (1, 1)-<332>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<117>, (1, 3)-<331>, (1, 1)-<332> -> (1, 1)-<333>
[<MovementOps.EXPAND: 3>] : (1, 1)-<333> -> (1, 3)-<334>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<328>, (1, 3)-<334>, (1, 3)-<117>, (1, 3)-<331> -> (1, 1)-<335>
[<MovementOps.EXPAND: 3>] : (1, 1)-<335> -> (1, 3)-<336>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<336> -> (1, 3, 1, 1)-<337>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<328> -> (1, 3, 1, 1)-<338>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<334> -> (1, 3, 1, 1)-<339>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<117> -> (1, 3, 1, 1)-<340>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<331> -> (1, 3, 1, 1)-<341>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<320>, (1, 3, 1, 1)-<324>, (1, 3, 1, 1)-<327>, (1, 3, 1, 1)-<337>, (1, 3, 1, 1)-<338>, (1, 3, 1, 1)-<339>, (1, 3, 1, 1)-<340>, (1, 3, 1, 1)-<341> -> (1, 3, 1, 1)-<342>
[<MovementOps.RESHAPE: 1>] : (3, 3, 1, 1)-<318> -> (1, 3, 3, 1, 1)-<343>
[<MovementOps.PERMUTE: 2>] : (1, 3, 3, 1, 1)-<343> -> (1, 3, 3, 1, 1)-<344>
[<MovementOps.RESHAPE: 1>] : (1, 3, 3, 1, 1)-<344> -> (3, 3, 1, 1)-<345>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<240>, (1, 3, 1, 1)-<342>, (3, 3, 1, 1)-<345> -> (1, 3)-<346>
t.grad:  [[2.6678081e+00 1.5085926e+00 2.0905372e-03]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:BinaryOps.SUB> <- <LB (1, 3) op:BinaryOps.SUB>

HIT <LB (3, 3) op:MovementOps.RESHAPE> <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (3, 3) op:BinaryOps.ADD>
x <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<138> -> (3, 3, 1, 1)-<347>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<274> -> (3, 1, 1, 1)-<348>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<342> -> (3, 1, 1, 1)-<349>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (3, 3, 1, 1)-<347>, (3, 1, 1, 1)-<348>, (3, 1, 1, 1)-<349> -> (3, 3)-<350>
t.grad:  [[ 5.338003   3.020351   0.       ]
 [ 2.6681046  1.5096679  0.       ]
 [-5.3397975 -3.0213661  0.       ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:BinaryOps.ADD> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:BinaryOps.ADD> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:BinaryOps.SUB> <- <LB (3, 3) op:BinaryOps.SUB>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<351>
[<MovementOps.RESHAPE: 1>] : (1,)-<351> -> (1, 1)-<352>
[<MovementOps.EXPAND: 3>] : (1, 1)-<352> -> (1, 3)-<353>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<354>
[<MovementOps.RESHAPE: 1>] : (1,)-<354> -> (1, 1)-<355>
[<MovementOps.EXPAND: 3>] : (1, 1)-<355> -> (1, 3)-<356>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<353>, (1, 3)-<100>, (1, 3)-<356>, (1, 3)-<346> -> (1, 3)-<100>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<357>
[<MovementOps.RESHAPE: 1>] : (1,)-<357> -> (1, 1)-<358>
[<MovementOps.EXPAND: 3>] : (1, 1)-<358> -> (1, 3)-<359>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<360>
[<MovementOps.RESHAPE: 1>] : (1,)-<360> -> (1, 1)-<361>
[<MovementOps.EXPAND: 3>] : (1, 1)-<361> -> (1, 3)-<362>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<359>, (1, 3)-<101>, (1, 3)-<362>, (1, 3)-<346>, (1, 3)-<346> -> (1, 3)-<101>
AFTER optim |  False  | self.m[0].data [[3.8690913e-01 2.1883370e-01 2.0905373e-04]] self.v[0].data [[8.8970000e-03 2.8457164e-03 4.3703459e-09]]
########################################
2
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:BinaryOps.ADD>
BEFORE optim |  True  | self.m[0].data [[3.8690913e-01 2.1883370e-01 2.0905373e-04]] self.v[0].data [[8.8970000e-03 2.8457164e-03 4.3703459e-09]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:BinaryOps.ADD>
x <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<180> -> (1, 3, 1, 1)-<363>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<4> -> (1, 3, 1, 1)-<364>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<6> -> (3, 3)-<365>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<365> -> (3, 3, 1, 1)-<366>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<364>, (3, 3, 1, 1)-<366> -> (1, 3)-<367>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<367> -> (1, 3, 1, 1)-<368>
[<ReduceOps.MAX: 2>] : (1, 3)-<367> -> (1, 1)-<369>
[<MovementOps.EXPAND: 3>] : (1, 1)-<369> -> (1, 3)-<370>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<367>, (1, 3)-<370> -> (1, 3)-<371>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<371> -> (1, 3, 1, 1)-<372>
[<ReduceOps.SUM: 1>] : (1, 3)-<371> -> (1, 1)-<373>
[<MovementOps.EXPAND: 3>] : (1, 1)-<373> -> (1, 3)-<374>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<374> -> (1, 3, 1, 1)-<375>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<367>, (1, 3)-<370> -> (1, 3)-<376>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
k <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<377>
[<MovementOps.RESHAPE: 1>] : (1,)-<377> -> (1, 1)-<378>
[<MovementOps.EXPAND: 3>] : (1, 1)-<378> -> (1, 3)-<379>
[<ReduceOps.SUM: 1>] : (1, 3)-<376> -> (1, 1)-<380>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<19>, (1, 3)-<379>, (1, 1)-<380> -> (1, 1)-<381>
[<MovementOps.EXPAND: 3>] : (1, 1)-<381> -> (1, 3)-<382>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<376>, (1, 3)-<382>, (1, 3)-<19>, (1, 3)-<379> -> (1, 1)-<383>
[<MovementOps.EXPAND: 3>] : (1, 1)-<383> -> (1, 3)-<384>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<384> -> (1, 3, 1, 1)-<385>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<376> -> (1, 3, 1, 1)-<386>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<382> -> (1, 3, 1, 1)-<387>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<19> -> (1, 3, 1, 1)-<388>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<379> -> (1, 3, 1, 1)-<389>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<368>, (1, 3, 1, 1)-<372>, (1, 3, 1, 1)-<375>, (1, 3, 1, 1)-<385>, (1, 3, 1, 1)-<386>, (1, 3, 1, 1)-<387>, (1, 3, 1, 1)-<388>, (1, 3, 1, 1)-<389> -> (1, 3, 1, 1)-<390>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<6> -> (3, 3, 1, 1)-<391>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<363>, (1, 3, 1, 1)-<390>, (3, 3, 1, 1)-<391> -> (1, 3)-<392>
t.grad:  [[3.998879   2.2596734  0.00657357]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>

HIT <LB (3, 3) op:MovementOps.RESHAPE> <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (3, 3) op:BinaryOps.ADD>
x <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<184> -> (3, 3, 1, 1)-<393>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<4> -> (3, 1, 1, 1)-<394>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<390> -> (3, 1, 1, 1)-<395>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (3, 3, 1, 1)-<393>, (3, 1, 1, 1)-<394>, (3, 1, 1, 1)-<395> -> (3, 3)-<396>
t.grad:  [[ 8.005789   4.529599   0.       ]
 [ 4.0003357  2.2633522  0.       ]
 [-8.01224   -4.5332494  0.       ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<397>
[<MovementOps.RESHAPE: 1>] : (1,)-<397> -> (1, 1)-<398>
[<MovementOps.EXPAND: 3>] : (1, 1)-<398> -> (1, 3)-<399>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<400>
[<MovementOps.RESHAPE: 1>] : (1,)-<400> -> (1, 1)-<401>
[<MovementOps.EXPAND: 3>] : (1, 1)-<401> -> (1, 3)-<402>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<399>, (1, 3)-<2>, (1, 3)-<402>, (1, 3)-<392> -> (1, 3)-<2>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<403>
[<MovementOps.RESHAPE: 1>] : (1,)-<403> -> (1, 1)-<404>
[<MovementOps.EXPAND: 3>] : (1, 1)-<404> -> (1, 3)-<405>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<406>
[<MovementOps.RESHAPE: 1>] : (1,)-<406> -> (1, 1)-<407>
[<MovementOps.EXPAND: 3>] : (1, 1)-<407> -> (1, 3)-<408>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<405>, (1, 3)-<3>, (1, 3)-<408>, (1, 3)-<392>, (1, 3)-<392> -> (1, 3)-<3>
AFTER optim |  True  | self.m[0].data [[0.7481061  0.42291766 0.00084551]] self.v[0].data [[2.4879137e-02 7.9489946e-03 4.7577775e-08]]
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<409>
[<BinaryOps.ADD: 1>] : (1,)-<198>, (1,)-<409> -> (1,)-<410>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<411>
[<MovementOps.RESHAPE: 1>] : (1,)-<411> -> (1, 1)-<412>
[<MovementOps.EXPAND: 3>] : (1, 1)-<412> -> (3, 3)-<413>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<414>
[<MovementOps.RESHAPE: 1>] : (1,)-<414> -> (1, 1)-<415>
[<MovementOps.EXPAND: 3>] : (1, 1)-<415> -> (3, 3)-<416>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<413>, (3, 3)-<62>, (3, 3)-<416>, (3, 3)-<396> -> (3, 3)-<62>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<417>
[<MovementOps.RESHAPE: 1>] : (1,)-<417> -> (1, 1)-<418>
[<MovementOps.EXPAND: 3>] : (1, 1)-<418> -> (3, 3)-<419>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<420>
[<MovementOps.RESHAPE: 1>] : (1,)-<420> -> (1, 1)-<421>
[<MovementOps.EXPAND: 3>] : (1, 1)-<421> -> (3, 3)-<422>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<419>, (3, 3)-<70>, (3, 3)-<422>, (3, 3)-<396>, (3, 3)-<396> -> (3, 3)-<70>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<423>
[<MovementOps.RESHAPE: 1>] : (1,)-<423> -> (1, 1)-<424>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<425>
[<MovementOps.RESHAPE: 1>] : (1,)-<425> -> (1, 1)-<426>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<427>
[<MovementOps.RESHAPE: 1>] : (1,)-<427> -> (1, 1)-<428>
[<MovementOps.RESHAPE: 1>] : (1,)-<198> -> (1, 1)-<429>
[<MovementOps.RESHAPE: 1>] : (1,)-<409> -> (1, 1)-<430>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<431>
[<MovementOps.RESHAPE: 1>] : (1,)-<431> -> (1, 1)-<432>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<433>
[<MovementOps.RESHAPE: 1>] : (1,)-<433> -> (1, 1)-<434>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<435>
[<MovementOps.RESHAPE: 1>] : (1,)-<435> -> (1, 1)-<436>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<424>, (1, 1)-<426>, (1, 1)-<428>, (1, 1)-<429>, (1, 1)-<430>, (1, 1)-<432>, (1, 1)-<434>, (1, 1)-<436>, (1, 1)-<429>, (1, 1)-<430> -> (1, 1)-<437>
[<MovementOps.EXPAND: 3>] : (1, 1)-<437> -> (1, 3)-<438>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<439>
[<MovementOps.RESHAPE: 1>] : (1,)-<439> -> (1, 1)-<440>
[<MovementOps.EXPAND: 3>] : (1, 1)-<440> -> (1, 3)-<441>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<442>
[<MovementOps.RESHAPE: 1>] : (1,)-<442> -> (1, 1)-<443>
[<MovementOps.EXPAND: 3>] : (1, 1)-<443> -> (1, 3)-<444>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<4>, (1, 3)-<438>, (1, 3)-<399>, (1, 3)-<2>, (1, 3)-<402>, (1, 3)-<392>, (1, 3)-<405>, (1, 3)-<3>, (1, 3)-<408>, (1, 3)-<392>, (1, 3)-<392>, (1, 3)-<441>, (1, 3)-<444> -> (1, 3)-<4>
[<MovementOps.EXPAND: 3>] : (1, 1)-<437> -> (3, 3)-<445>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<446>
[<MovementOps.RESHAPE: 1>] : (1,)-<446> -> (1, 1)-<447>
[<MovementOps.EXPAND: 3>] : (1, 1)-<447> -> (3, 3)-<448>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<449>
[<MovementOps.RESHAPE: 1>] : (1,)-<449> -> (1, 1)-<450>
[<MovementOps.EXPAND: 3>] : (1, 1)-<450> -> (3, 3)-<451>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<6>, (3, 3)-<445>, (3, 3)-<413>, (3, 3)-<62>, (3, 3)-<416>, (3, 3)-<396>, (3, 3)-<419>, (3, 3)-<70>, (3, 3)-<422>, (3, 3)-<396>, (3, 3)-<396>, (3, 3)-<448>, (3, 3)-<451> -> (3, 3)-<6>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.POW>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.SUB>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.POW>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.SUB>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.POW>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.SUB>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.POW>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.SUB>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.POW>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.SUB>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.POW>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:BinaryOps.ADD>
create <LB (3, 3, 1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.MUL>
create <LB (3, 3, 1, 1) op:BinaryOps.SUB>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:BinaryOps.ADD>
BEFORE optim |  False  | self.m[0].data [[3.8690913e-01 2.1883370e-01 2.0905373e-04]] self.v[0].data [[8.8970000e-03 2.8457164e-03 4.3703459e-09]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:BinaryOps.ADD>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<346> -> (1, 3, 1, 1)-<452>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<102> -> (1, 3, 1, 1)-<453>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<258> -> (1, 3, 1, 1)-<454>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<141> -> (1, 3, 1, 1)-<455>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<100> -> (1, 3, 1, 1)-<456>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<144> -> (1, 3, 1, 1)-<457>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<134> -> (1, 3, 1, 1)-<458>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<147> -> (1, 3, 1, 1)-<459>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<101> -> (1, 3, 1, 1)-<460>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<150> -> (1, 3, 1, 1)-<461>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<268> -> (1, 3, 1, 1)-<462>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<272> -> (1, 3, 1, 1)-<463>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<464>
[<MovementOps.RESHAPE: 1>] : (1,)-<464> -> (1, 1)-<465>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<466>
[<MovementOps.RESHAPE: 1>] : (1,)-<466> -> (1, 1)-<467>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<468>
[<MovementOps.RESHAPE: 1>] : (1,)-<468> -> (1, 1)-<469>
[<MovementOps.RESHAPE: 1>] : (1,)-<1> -> (1, 1)-<470>
[<MovementOps.RESHAPE: 1>] : (1,)-<249> -> (1, 1)-<471>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<472>
[<MovementOps.RESHAPE: 1>] : (1,)-<472> -> (1, 1)-<473>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<474>
[<MovementOps.RESHAPE: 1>] : (1,)-<474> -> (1, 1)-<475>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<476>
[<MovementOps.RESHAPE: 1>] : (1,)-<476> -> (1, 1)-<477>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<478>
[<MovementOps.RESHAPE: 1>] : (1,)-<478> -> (1, 1)-<479>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.ADD: 1>] : (1, 1)-<465>, (1, 1)-<467>, (1, 1)-<469>, (1, 1)-<470>, (1, 1)-<471>, (1, 1)-<473>, (1, 1)-<475>, (1, 1)-<477>, (1, 1)-<479>, (1, 1)-<470>, (1, 1)-<471>, (1, 1)-<473> -> (1, 1)-<480>
[<MovementOps.EXPAND: 3>] : (1, 1)-<480> -> (1, 3)-<481>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<481> -> (1, 3, 1, 1)-<482>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<353> -> (1, 3, 1, 1)-<483>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<100> -> (1, 3, 1, 1)-<484>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<356> -> (1, 3, 1, 1)-<485>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<359> -> (1, 3, 1, 1)-<486>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<101> -> (1, 3, 1, 1)-<487>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<362> -> (1, 3, 1, 1)-<488>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<489>
[<MovementOps.RESHAPE: 1>] : (1,)-<489> -> (1, 1)-<490>
[<MovementOps.EXPAND: 3>] : (1, 1)-<490> -> (1, 3)-<491>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<491> -> (1, 3, 1, 1)-<492>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<493>
[<MovementOps.RESHAPE: 1>] : (1,)-<493> -> (1, 1)-<494>
[<MovementOps.EXPAND: 3>] : (1, 1)-<494> -> (1, 3)-<495>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<495> -> (1, 3, 1, 1)-<496>
[<BinaryOps.SUB: 2>, <BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<453>, (1, 3, 1, 1)-<454>, (1, 3, 1, 1)-<455>, (1, 3, 1, 1)-<456>, (1, 3, 1, 1)-<457>, (1, 3, 1, 1)-<458>, (1, 3, 1, 1)-<459>, (1, 3, 1, 1)-<460>, (1, 3, 1, 1)-<461>, (1, 3, 1, 1)-<458>, (1, 3, 1, 1)-<458>, (1, 3, 1, 1)-<462>, (1, 3, 1, 1)-<463>, (1, 3, 1, 1)-<482>, (1, 3, 1, 1)-<483>, (1, 3, 1, 1)-<484>, (1, 3, 1, 1)-<485>, (1, 3, 1, 1)-<452>, (1, 3, 1, 1)-<486>, (1, 3, 1, 1)-<487>, (1, 3, 1, 1)-<488>, (1, 3, 1, 1)-<452>, (1, 3, 1, 1)-<452>, (1, 3, 1, 1)-<492>, (1, 3, 1, 1)-<496> -> (1, 3, 1, 1)-<497>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<104> -> (3, 3)-<498>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<498> -> (3, 3, 1, 1)-<499>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<277> -> (3, 3)-<500>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<500> -> (3, 3, 1, 1)-<501>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<282> -> (3, 3)-<502>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<502> -> (3, 3, 1, 1)-<503>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<285> -> (3, 3)-<504>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<504> -> (3, 3, 1, 1)-<505>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<290> -> (3, 3)-<506>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<506> -> (3, 3, 1, 1)-<507>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<138> -> (3, 3)-<508>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<508> -> (3, 3, 1, 1)-<509>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<297> -> (3, 3)-<510>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<510> -> (3, 3, 1, 1)-<511>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<300> -> (3, 3)-<512>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<512> -> (3, 3, 1, 1)-<513>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<305> -> (3, 3)-<514>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<514> -> (3, 3, 1, 1)-<515>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<310> -> (3, 3)-<516>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<516> -> (3, 3, 1, 1)-<517>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<315> -> (3, 3)-<518>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<518> -> (3, 3, 1, 1)-<519>
[<MovementOps.EXPAND: 3>] : (1, 1)-<480> -> (3, 3)-<520>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<520> -> (3, 3)-<521>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<521> -> (3, 3, 1, 1)-<522>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<523>
[<MovementOps.RESHAPE: 1>] : (1,)-<523> -> (1, 1)-<524>
[<MovementOps.EXPAND: 3>] : (1, 1)-<524> -> (3, 3)-<525>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<525> -> (3, 3)-<526>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<526> -> (3, 3, 1, 1)-<527>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<528>
[<MovementOps.RESHAPE: 1>] : (1,)-<528> -> (1, 1)-<529>
[<MovementOps.EXPAND: 3>] : (1, 1)-<529> -> (3, 3)-<530>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<530> -> (3, 3)-<531>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<531> -> (3, 3, 1, 1)-<532>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<350> -> (3, 3)-<533>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<533> -> (3, 3, 1, 1)-<534>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<535>
[<MovementOps.RESHAPE: 1>] : (1,)-<535> -> (1, 1)-<536>
[<MovementOps.EXPAND: 3>] : (1, 1)-<536> -> (3, 3)-<537>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<537> -> (3, 3)-<538>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<538> -> (3, 3, 1, 1)-<539>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<540>
[<MovementOps.RESHAPE: 1>] : (1,)-<540> -> (1, 1)-<541>
[<MovementOps.EXPAND: 3>] : (1, 1)-<541> -> (3, 3)-<542>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<542> -> (3, 3)-<543>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<543> -> (3, 3, 1, 1)-<544>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<545>
[<MovementOps.RESHAPE: 1>] : (1,)-<545> -> (1, 1)-<546>
[<MovementOps.EXPAND: 3>] : (1, 1)-<546> -> (3, 3)-<547>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<547> -> (3, 3)-<548>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<548> -> (3, 3, 1, 1)-<549>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<550>
[<MovementOps.RESHAPE: 1>] : (1,)-<550> -> (1, 1)-<551>
[<MovementOps.EXPAND: 3>] : (1, 1)-<551> -> (3, 3)-<552>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<552> -> (3, 3)-<553>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<553> -> (3, 3, 1, 1)-<554>
[<BinaryOps.SUB: 2>, <BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3, 1, 1)-<499>, (3, 3, 1, 1)-<501>, (3, 3, 1, 1)-<503>, (3, 3, 1, 1)-<505>, (3, 3, 1, 1)-<507>, (3, 3, 1, 1)-<509>, (3, 3, 1, 1)-<511>, (3, 3, 1, 1)-<513>, (3, 3, 1, 1)-<515>, (3, 3, 1, 1)-<509>, (3, 3, 1, 1)-<509>, (3, 3, 1, 1)-<517>, (3, 3, 1, 1)-<519>, (3, 3, 1, 1)-<522>, (3, 3, 1, 1)-<527>, (3, 3, 1, 1)-<503>, (3, 3, 1, 1)-<505>, (3, 3, 1, 1)-<507>, (3, 3, 1, 1)-<509>, (3, 3, 1, 1)-<532>, (3, 3, 1, 1)-<534>, (3, 3, 1, 1)-<539>, (3, 3, 1, 1)-<511>, (3, 3, 1, 1)-<513>, (3, 3, 1, 1)-<515>, (3, 3, 1, 1)-<509>, (3, 3, 1, 1)-<509>, (3, 3, 1, 1)-<544>, (3, 3, 1, 1)-<534>, (3, 3, 1, 1)-<534>, (3, 3, 1, 1)-<549>, (3, 3, 1, 1)-<554> -> (3, 3, 1, 1)-<555>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<497>, (3, 3, 1, 1)-<555> -> (1, 3)-<556>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<556> -> (1, 3, 1, 1)-<557>
[<ReduceOps.MAX: 2>] : (1, 3)-<556> -> (1, 1)-<558>
[<MovementOps.EXPAND: 3>] : (1, 1)-<558> -> (1, 3)-<559>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<556>, (1, 3)-<559> -> (1, 3)-<560>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<560> -> (1, 3, 1, 1)-<561>
[<ReduceOps.SUM: 1>] : (1, 3)-<560> -> (1, 1)-<562>
[<MovementOps.EXPAND: 3>] : (1, 1)-<562> -> (1, 3)-<563>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<563> -> (1, 3, 1, 1)-<564>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<556>, (1, 3)-<559> -> (1, 3)-<565>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<566>
[<MovementOps.RESHAPE: 1>] : (1,)-<566> -> (1, 1)-<567>
[<MovementOps.EXPAND: 3>] : (1, 1)-<567> -> (1, 3)-<568>
[<ReduceOps.SUM: 1>] : (1, 3)-<565> -> (1, 1)-<569>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<117>, (1, 3)-<568>, (1, 1)-<569> -> (1, 1)-<570>
[<MovementOps.EXPAND: 3>] : (1, 1)-<570> -> (1, 3)-<571>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<565>, (1, 3)-<571>, (1, 3)-<117>, (1, 3)-<568> -> (1, 1)-<572>
[<MovementOps.EXPAND: 3>] : (1, 1)-<572> -> (1, 3)-<573>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<573> -> (1, 3, 1, 1)-<574>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<565> -> (1, 3, 1, 1)-<575>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<571> -> (1, 3, 1, 1)-<576>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<117> -> (1, 3, 1, 1)-<577>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<568> -> (1, 3, 1, 1)-<578>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<557>, (1, 3, 1, 1)-<561>, (1, 3, 1, 1)-<564>, (1, 3, 1, 1)-<574>, (1, 3, 1, 1)-<575>, (1, 3, 1, 1)-<576>, (1, 3, 1, 1)-<577>, (1, 3, 1, 1)-<578> -> (1, 3, 1, 1)-<579>
[<MovementOps.RESHAPE: 1>] : (3, 3, 1, 1)-<555> -> (1, 3, 3, 1, 1)-<580>
[<MovementOps.PERMUTE: 2>] : (1, 3, 3, 1, 1)-<580> -> (1, 3, 3, 1, 1)-<581>
[<MovementOps.RESHAPE: 1>] : (1, 3, 3, 1, 1)-<581> -> (3, 3, 1, 1)-<582>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<452>, (1, 3, 1, 1)-<579>, (3, 3, 1, 1)-<582> -> (1, 3)-<583>
t.grad:  [[3.9992063  2.2600303  0.00619978]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:BinaryOps.SUB> <- <LB (1, 3) op:BinaryOps.SUB>

HIT <LB (3, 3) op:MovementOps.RESHAPE> <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (3, 3) op:BinaryOps.ADD>
x <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<350> -> (3, 3, 1, 1)-<584>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<497> -> (3, 1, 1, 1)-<585>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<579> -> (3, 1, 1, 1)-<586>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (3, 3, 1, 1)-<584>, (3, 1, 1, 1)-<585>, (3, 1, 1, 1)-<586> -> (3, 3)-<587>
t.grad:  [[ 8.005521   4.5294666  0.       ]
 [ 4.000115   2.2632363  0.       ]
 [-8.0133505 -4.533896   0.       ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:BinaryOps.ADD> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:BinaryOps.ADD> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:BinaryOps.SUB> <- <LB (3, 3) op:BinaryOps.SUB>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<588>
[<MovementOps.RESHAPE: 1>] : (1,)-<588> -> (1, 1)-<589>
[<MovementOps.EXPAND: 3>] : (1, 1)-<589> -> (1, 3)-<590>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<591>
[<MovementOps.RESHAPE: 1>] : (1,)-<591> -> (1, 1)-<592>
[<MovementOps.EXPAND: 3>] : (1, 1)-<592> -> (1, 3)-<593>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<590>, (1, 3)-<100>, (1, 3)-<593>, (1, 3)-<583> -> (1, 3)-<100>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<594>
[<MovementOps.RESHAPE: 1>] : (1,)-<594> -> (1, 1)-<595>
[<MovementOps.EXPAND: 3>] : (1, 1)-<595> -> (1, 3)-<596>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<597>
[<MovementOps.RESHAPE: 1>] : (1,)-<597> -> (1, 1)-<598>
[<MovementOps.EXPAND: 3>] : (1, 1)-<598> -> (1, 3)-<599>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<596>, (1, 3)-<101>, (1, 3)-<599>, (1, 3)-<583>, (1, 3)-<583> -> (1, 3)-<101>
AFTER optim |  False  | self.m[0].data [[0.74813884 0.42295337 0.00080813]] self.v[0].data [[2.4881756e-02 7.9506077e-03 4.2803215e-08]]
########################################
