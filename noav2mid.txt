ops_gpu not available initialization failed
ops_triton not available No module named 'pycuda'
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (1,) op:LoadOps.FROMCPU>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<0>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
create <LB (1, 3) op:LoadOps.FROMCPU>
create <LB (3, 3) op:LoadOps.FROMCPU>
0
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<1>
BEFORE optim |  True  | self.m[0].data [[0. 0. 0.]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<2>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<2> -> (1, 3, 1, 1)-<3>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<4>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<4> -> (3, 3)-<5>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<5> -> (3, 3, 1, 1)-<6>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<3>, (3, 3, 1, 1)-<6> -> (1, 3)-<7>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<7> -> (1, 3, 1, 1)-<8>
[<ReduceOps.MAX: 2>] : (1, 3)-<7> -> (1, 1)-<9>
[<MovementOps.EXPAND: 3>] : (1, 1)-<9> -> (1, 3)-<10>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<7>, (1, 3)-<10> -> (1, 3)-<11>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<11> -> (1, 3, 1, 1)-<12>
[<ReduceOps.SUM: 1>] : (1, 3)-<11> -> (1, 1)-<13>
[<MovementOps.EXPAND: 3>] : (1, 1)-<13> -> (1, 3)-<14>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<14> -> (1, 3, 1, 1)-<15>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<7>, (1, 3)-<10> -> (1, 3)-<16>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<17>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<18>
[<MovementOps.RESHAPE: 1>] : (1,)-<18> -> (1, 1)-<19>
[<MovementOps.EXPAND: 3>] : (1, 1)-<19> -> (1, 3)-<20>
[<ReduceOps.SUM: 1>] : (1, 3)-<16> -> (1, 1)-<21>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<17>, (1, 3)-<20>, (1, 1)-<21> -> (1, 1)-<22>
[<MovementOps.EXPAND: 3>] : (1, 1)-<22> -> (1, 3)-<23>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<16>, (1, 3)-<23>, (1, 3)-<17>, (1, 3)-<20> -> (1, 1)-<24>
[<MovementOps.EXPAND: 3>] : (1, 1)-<24> -> (1, 3)-<25>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<25> -> (1, 3, 1, 1)-<26>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<16> -> (1, 3, 1, 1)-<27>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<23> -> (1, 3, 1, 1)-<28>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<17> -> (1, 3, 1, 1)-<29>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<20> -> (1, 3, 1, 1)-<30>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<8>, (1, 3, 1, 1)-<12>, (1, 3, 1, 1)-<15>, (1, 3, 1, 1)-<26>, (1, 3, 1, 1)-<27>, (1, 3, 1, 1)-<28>, (1, 3, 1, 1)-<29>, (1, 3, 1, 1)-<30> -> (1, 3, 1, 1)-<31>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<4> -> (3, 3, 1, 1)-<32>
[<ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<31>, (3, 3, 1, 1)-<32> -> (1, 3, 1, 1)-<33>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<33> -> (1, 3)-<34>
t.grad:  [[1.334759   0.75527155 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:LoadOps.FROMCPU> <- <LB (1, 3) op:BinaryOps.ADD>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<35>
[<MovementOps.RESHAPE: 1>] : (1,)-<35> -> (1, 1)-<36>
[<MovementOps.EXPAND: 3>] : (1, 1)-<36> -> (1, 3)-<37>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<38>
[<MovementOps.RESHAPE: 1>] : (1,)-<38> -> (1, 1)-<39>
[<MovementOps.EXPAND: 3>] : (1, 1)-<39> -> (1, 3)-<40>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<37>, (1, 3)-<1>, (1, 3)-<40>, (1, 3)-<34> -> (1, 3)-<1>
MID optim |  True  | self.m[0].data [[0.1334759  0.07552715 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<2> -> (3, 1, 1, 1)-<41>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<31> -> (3, 1, 1, 1)-<42>
[<ProcessingOps.CONV: 1>] : (3, 1, 1, 1)-<41>, (3, 1, 1, 1)-<42> -> (3, 3, 1, 1)-<43>
[<MovementOps.RESHAPE: 1>] : (3, 3, 1, 1)-<43> -> (3, 3)-<44>
t.grad:  [[ 2.669518    1.5105431   0.        ]
 [ 1.334759    0.75527155  0.        ]
 [-2.669518   -1.5105431   0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:LoadOps.FROMCPU> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:LoadOps.FROMCPU> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
AFTER optim |  True  | self.m[0].data [[0.1334759  0.07552715 0.        ]]
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<45>
[<BinaryOps.ADD: 1>] : (1,)-<0>, (1,)-<45> -> (1,)-<46>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<47>
[<MovementOps.RESHAPE: 1>] : (1,)-<47> -> (1, 1)-<48>
[<MovementOps.EXPAND: 3>] : (1, 1)-<48> -> (3, 3)-<49>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<50>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<51>
[<MovementOps.RESHAPE: 1>] : (1,)-<51> -> (1, 1)-<52>
[<MovementOps.EXPAND: 3>] : (1, 1)-<52> -> (3, 3)-<53>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<49>, (3, 3)-<50>, (3, 3)-<53>, (3, 3)-<44> -> (3, 3)-<54>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<55>
[<MovementOps.RESHAPE: 1>] : (1,)-<55> -> (1, 1)-<56>
[<MovementOps.EXPAND: 3>] : (1, 1)-<56> -> (1, 3)-<57>
[<LoadOps.FROMCPU: 1>] :  -> (1, 3)-<58>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<59>
[<MovementOps.RESHAPE: 1>] : (1,)-<59> -> (1, 1)-<60>
[<MovementOps.EXPAND: 3>] : (1, 1)-<60> -> (1, 3)-<61>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<57>, (1, 3)-<58>, (1, 3)-<61>, (1, 3)-<34>, (1, 3)-<34> -> (1, 3)-<62>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<63>
[<MovementOps.RESHAPE: 1>] : (1,)-<63> -> (1, 1)-<64>
[<MovementOps.EXPAND: 3>] : (1, 1)-<64> -> (3, 3)-<65>
[<LoadOps.FROMCPU: 1>] :  -> (3, 3)-<66>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<67>
[<MovementOps.RESHAPE: 1>] : (1,)-<67> -> (1, 1)-<68>
[<MovementOps.EXPAND: 3>] : (1, 1)-<68> -> (3, 3)-<69>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<65>, (3, 3)-<66>, (3, 3)-<69>, (3, 3)-<44>, (3, 3)-<44> -> (3, 3)-<70>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<71>
[<MovementOps.RESHAPE: 1>] : (1,)-<71> -> (1, 1)-<72>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<73>
[<MovementOps.RESHAPE: 1>] : (1,)-<73> -> (1, 1)-<74>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<75>
[<MovementOps.RESHAPE: 1>] : (1,)-<75> -> (1, 1)-<76>
[<MovementOps.RESHAPE: 1>] : (1,)-<0> -> (1, 1)-<77>
[<MovementOps.RESHAPE: 1>] : (1,)-<45> -> (1, 1)-<78>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<79>
[<MovementOps.RESHAPE: 1>] : (1,)-<79> -> (1, 1)-<80>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<81>
[<MovementOps.RESHAPE: 1>] : (1,)-<81> -> (1, 1)-<82>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<83>
[<MovementOps.RESHAPE: 1>] : (1,)-<83> -> (1, 1)-<84>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<72>, (1, 1)-<74>, (1, 1)-<76>, (1, 1)-<77>, (1, 1)-<78>, (1, 1)-<80>, (1, 1)-<82>, (1, 1)-<84>, (1, 1)-<77>, (1, 1)-<78> -> (1, 1)-<85>
[<MovementOps.EXPAND: 3>] : (1, 1)-<85> -> (1, 3)-<86>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<87>
[<MovementOps.RESHAPE: 1>] : (1,)-<87> -> (1, 1)-<88>
[<MovementOps.EXPAND: 3>] : (1, 1)-<88> -> (1, 3)-<89>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<90>
[<MovementOps.RESHAPE: 1>] : (1,)-<90> -> (1, 1)-<91>
[<MovementOps.EXPAND: 3>] : (1, 1)-<91> -> (1, 3)-<92>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<2>, (1, 3)-<86>, (1, 3)-<1>, (1, 3)-<57>, (1, 3)-<58>, (1, 3)-<61>, (1, 3)-<34>, (1, 3)-<34>, (1, 3)-<89>, (1, 3)-<92> -> (1, 3)-<2>
[<MovementOps.EXPAND: 3>] : (1, 1)-<85> -> (3, 3)-<93>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<94>
[<MovementOps.RESHAPE: 1>] : (1,)-<94> -> (1, 1)-<95>
[<MovementOps.EXPAND: 3>] : (1, 1)-<95> -> (3, 3)-<96>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<97>
[<MovementOps.RESHAPE: 1>] : (1,)-<97> -> (1, 1)-<98>
[<MovementOps.EXPAND: 3>] : (1, 1)-<98> -> (3, 3)-<99>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<4>, (3, 3)-<93>, (3, 3)-<49>, (3, 3)-<50>, (3, 3)-<53>, (3, 3)-<44>, (3, 3)-<65>, (3, 3)-<66>, (3, 3)-<69>, (3, 3)-<44>, (3, 3)-<44>, (3, 3)-<96>, (3, 3)-<99> -> (3, 3)-<4>
########################################
1
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:BinaryOps.ADD>
BEFORE optim |  True  | self.m[0].data [[0.1334759  0.07552715 0.        ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:BinaryOps.ADD>
x <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<34> -> (1, 3, 1, 1)-<100>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<2> -> (1, 3, 1, 1)-<101>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<4> -> (3, 3)-<102>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<102> -> (3, 3, 1, 1)-<103>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<101>, (3, 3, 1, 1)-<103> -> (1, 3)-<104>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<104> -> (1, 3, 1, 1)-<105>
[<ReduceOps.MAX: 2>] : (1, 3)-<104> -> (1, 1)-<106>
[<MovementOps.EXPAND: 3>] : (1, 1)-<106> -> (1, 3)-<107>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<104>, (1, 3)-<107> -> (1, 3)-<108>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<108> -> (1, 3, 1, 1)-<109>
[<ReduceOps.SUM: 1>] : (1, 3)-<108> -> (1, 1)-<110>
[<MovementOps.EXPAND: 3>] : (1, 1)-<110> -> (1, 3)-<111>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<111> -> (1, 3, 1, 1)-<112>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<104>, (1, 3)-<107> -> (1, 3)-<113>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:UnaryOps.LOG>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<114>
[<MovementOps.RESHAPE: 1>] : (1,)-<114> -> (1, 1)-<115>
[<MovementOps.EXPAND: 3>] : (1, 1)-<115> -> (1, 3)-<116>
[<ReduceOps.SUM: 1>] : (1, 3)-<113> -> (1, 1)-<117>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<17>, (1, 3)-<116>, (1, 1)-<117> -> (1, 1)-<118>
[<MovementOps.EXPAND: 3>] : (1, 1)-<118> -> (1, 3)-<119>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<113>, (1, 3)-<119>, (1, 3)-<17>, (1, 3)-<116> -> (1, 1)-<120>
[<MovementOps.EXPAND: 3>] : (1, 1)-<120> -> (1, 3)-<121>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<121> -> (1, 3, 1, 1)-<122>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<113> -> (1, 3, 1, 1)-<123>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<119> -> (1, 3, 1, 1)-<124>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<17> -> (1, 3, 1, 1)-<125>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<116> -> (1, 3, 1, 1)-<126>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<105>, (1, 3, 1, 1)-<109>, (1, 3, 1, 1)-<112>, (1, 3, 1, 1)-<122>, (1, 3, 1, 1)-<123>, (1, 3, 1, 1)-<124>, (1, 3, 1, 1)-<125>, (1, 3, 1, 1)-<126> -> (1, 3, 1, 1)-<127>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<4> -> (3, 3, 1, 1)-<128>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<100>, (1, 3, 1, 1)-<127>, (3, 3, 1, 1)-<128> -> (1, 3)-<129>
t.grad:  [[2.6677876e+00 1.5085851e+00 2.0905090e-03]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<130>
[<MovementOps.RESHAPE: 1>] : (1,)-<130> -> (1, 1)-<131>
[<MovementOps.EXPAND: 3>] : (1, 1)-<131> -> (1, 3)-<132>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<133>
[<MovementOps.RESHAPE: 1>] : (1,)-<133> -> (1, 1)-<134>
[<MovementOps.EXPAND: 3>] : (1, 1)-<134> -> (1, 3)-<135>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<132>, (1, 3)-<1>, (1, 3)-<135>, (1, 3)-<129> -> (1, 3)-<1>
MID optim |  True  | self.m[0].data [[3.8690707e-01 2.1883294e-01 2.0905091e-04]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>

HIT <LB (3, 3) op:MovementOps.RESHAPE> <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (3, 3) op:BinaryOps.ADD>
x <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<44> -> (3, 3, 1, 1)-<136>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<2> -> (3, 1, 1, 1)-<137>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<127> -> (3, 1, 1, 1)-<138>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (3, 3, 1, 1)-<136>, (3, 1, 1, 1)-<137>, (3, 1, 1, 1)-<138> -> (3, 3)-<139>
t.grad:  [[ 5.3384213  3.0205956  0.       ]
 [ 2.668543   1.5099201  0.       ]
 [-5.3397565 -3.021351   0.       ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
AFTER optim |  True  | self.m[0].data [[3.8690707e-01 2.1883294e-01 2.0905091e-04]]
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<140>
[<BinaryOps.ADD: 1>] : (1,)-<46>, (1,)-<140> -> (1,)-<141>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<142>
[<MovementOps.RESHAPE: 1>] : (1,)-<142> -> (1, 1)-<143>
[<MovementOps.EXPAND: 3>] : (1, 1)-<143> -> (3, 3)-<144>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<145>
[<MovementOps.RESHAPE: 1>] : (1,)-<145> -> (1, 1)-<146>
[<MovementOps.EXPAND: 3>] : (1, 1)-<146> -> (3, 3)-<147>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<144>, (3, 3)-<54>, (3, 3)-<147>, (3, 3)-<139> -> (3, 3)-<54>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<148>
[<MovementOps.RESHAPE: 1>] : (1,)-<148> -> (1, 1)-<149>
[<MovementOps.EXPAND: 3>] : (1, 1)-<149> -> (1, 3)-<150>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<151>
[<MovementOps.RESHAPE: 1>] : (1,)-<151> -> (1, 1)-<152>
[<MovementOps.EXPAND: 3>] : (1, 1)-<152> -> (1, 3)-<153>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<150>, (1, 3)-<62>, (1, 3)-<153>, (1, 3)-<129>, (1, 3)-<129> -> (1, 3)-<62>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<154>
[<MovementOps.RESHAPE: 1>] : (1,)-<154> -> (1, 1)-<155>
[<MovementOps.EXPAND: 3>] : (1, 1)-<155> -> (3, 3)-<156>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<157>
[<MovementOps.RESHAPE: 1>] : (1,)-<157> -> (1, 1)-<158>
[<MovementOps.EXPAND: 3>] : (1, 1)-<158> -> (3, 3)-<159>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<156>, (3, 3)-<70>, (3, 3)-<159>, (3, 3)-<139>, (3, 3)-<139> -> (3, 3)-<70>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<160>
[<MovementOps.RESHAPE: 1>] : (1,)-<160> -> (1, 1)-<161>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<162>
[<MovementOps.RESHAPE: 1>] : (1,)-<162> -> (1, 1)-<163>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<164>
[<MovementOps.RESHAPE: 1>] : (1,)-<164> -> (1, 1)-<165>
[<MovementOps.RESHAPE: 1>] : (1,)-<46> -> (1, 1)-<166>
[<MovementOps.RESHAPE: 1>] : (1,)-<140> -> (1, 1)-<167>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<168>
[<MovementOps.RESHAPE: 1>] : (1,)-<168> -> (1, 1)-<169>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<170>
[<MovementOps.RESHAPE: 1>] : (1,)-<170> -> (1, 1)-<171>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<172>
[<MovementOps.RESHAPE: 1>] : (1,)-<172> -> (1, 1)-<173>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<161>, (1, 1)-<163>, (1, 1)-<165>, (1, 1)-<166>, (1, 1)-<167>, (1, 1)-<169>, (1, 1)-<171>, (1, 1)-<173>, (1, 1)-<166>, (1, 1)-<167> -> (1, 1)-<174>
[<MovementOps.EXPAND: 3>] : (1, 1)-<174> -> (1, 3)-<175>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<176>
[<MovementOps.RESHAPE: 1>] : (1,)-<176> -> (1, 1)-<177>
[<MovementOps.EXPAND: 3>] : (1, 1)-<177> -> (1, 3)-<178>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<179>
[<MovementOps.RESHAPE: 1>] : (1,)-<179> -> (1, 1)-<180>
[<MovementOps.EXPAND: 3>] : (1, 1)-<180> -> (1, 3)-<181>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<2>, (1, 3)-<175>, (1, 3)-<1>, (1, 3)-<150>, (1, 3)-<62>, (1, 3)-<153>, (1, 3)-<129>, (1, 3)-<129>, (1, 3)-<178>, (1, 3)-<181> -> (1, 3)-<2>
[<MovementOps.EXPAND: 3>] : (1, 1)-<174> -> (3, 3)-<182>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<183>
[<MovementOps.RESHAPE: 1>] : (1,)-<183> -> (1, 1)-<184>
[<MovementOps.EXPAND: 3>] : (1, 1)-<184> -> (3, 3)-<185>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<186>
[<MovementOps.RESHAPE: 1>] : (1,)-<186> -> (1, 1)-<187>
[<MovementOps.EXPAND: 3>] : (1, 1)-<187> -> (3, 3)-<188>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<4>, (3, 3)-<182>, (3, 3)-<144>, (3, 3)-<54>, (3, 3)-<147>, (3, 3)-<139>, (3, 3)-<156>, (3, 3)-<70>, (3, 3)-<159>, (3, 3)-<139>, (3, 3)-<139>, (3, 3)-<185>, (3, 3)-<188> -> (3, 3)-<4>
########################################
2
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:UnaryOps.RELU>
create <LB (1, 1) op:ReduceOps.MAX>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:UnaryOps.EXP>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:UnaryOps.LOG>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.SUB>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1,) op:MovementOps.RESHAPE>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 1) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.NEG>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:BinaryOps.CMPEQ>
create <LB (1, 1) op:ReduceOps.SUM>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.DIV>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.GT0>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:UnaryOps.GT0>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.DIV>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.ADD>
create <LB (3, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:UnaryOps.GT0>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.DIV>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.ADD>
create <LB (1, 3, 1, 1) op:BinaryOps.MUL>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (1, 3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (1, 1, 3, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 1, 1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
create <LB (3, 3, 1, 1) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.PERMUTE>
create <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3) op:BinaryOps.ADD>
BEFORE optim |  True  | self.m[0].data [[3.8690707e-01 2.1883294e-01 2.0905091e-04]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1,) op:BinaryOps.SUB>
create <LB (1,) op:UnaryOps.RECIPROCAL>
create <LB (1,) op:BinaryOps.MUL>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:BinaryOps.ADD>
x <LB (1, 3) op:MovementOps.RESHAPE>
create <LB (1, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<129> -> (1, 3, 1, 1)-<189>

HIT <LB (1, 3) op:MovementOps.RESHAPE> <LB (1, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (1, 3) op:UnaryOps.RELU>
x <LB (1, 3) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<2> -> (1, 3, 1, 1)-<190>
[<MovementOps.PERMUTE: 2>] : (3, 3)-<4> -> (3, 3)-<191>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<191> -> (3, 3, 1, 1)-<192>
[<MovementOps.RESHAPE: 1>, <UnaryOps.RELU: 3>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<190>, (3, 3, 1, 1)-<192> -> (1, 3)-<193>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<193> -> (1, 3, 1, 1)-<194>
[<ReduceOps.MAX: 2>] : (1, 3)-<193> -> (1, 1)-<195>
[<MovementOps.EXPAND: 3>] : (1, 1)-<195> -> (1, 3)-<196>
[<BinaryOps.CMPEQ: 6>] : (1, 3)-<193>, (1, 3)-<196> -> (1, 3)-<197>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<197> -> (1, 3, 1, 1)-<198>
[<ReduceOps.SUM: 1>] : (1, 3)-<197> -> (1, 1)-<199>
[<MovementOps.EXPAND: 3>] : (1, 1)-<199> -> (1, 3)-<200>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<200> -> (1, 3, 1, 1)-<201>
[<UnaryOps.EXP: 4>, <BinaryOps.SUB: 2>] : (1, 3)-<193>, (1, 3)-<196> -> (1, 3)-<202>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:BinaryOps.DIV>

HIT <LB (1, 1) op:ReduceOps.SUM> <LB (1, 1) op:ReduceOps.SUM>
k <LB (1, 1) op:BinaryOps.DIV>
k <LB (1, 1) op:UnaryOps.LOG>
x <LB (1, 1) op:BinaryOps.DIV>
x <LB (1, 1) op:UnaryOps.LOG>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<203>
[<MovementOps.RESHAPE: 1>] : (1,)-<203> -> (1, 1)-<204>
[<MovementOps.EXPAND: 3>] : (1, 1)-<204> -> (1, 3)-<205>
[<ReduceOps.SUM: 1>] : (1, 3)-<202> -> (1, 1)-<206>
[<BinaryOps.DIV: 4>, <ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.MUL: 3>] : (1, 3)-<17>, (1, 3)-<205>, (1, 1)-<206> -> (1, 1)-<207>
[<MovementOps.EXPAND: 3>] : (1, 1)-<207> -> (1, 3)-<208>
[<ReduceOps.SUM: 1>, <UnaryOps.NEG: 2>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<202>, (1, 3)-<208>, (1, 3)-<17>, (1, 3)-<205> -> (1, 1)-<209>
[<MovementOps.EXPAND: 3>] : (1, 1)-<209> -> (1, 3)-<210>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<210> -> (1, 3, 1, 1)-<211>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<202> -> (1, 3, 1, 1)-<212>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<208> -> (1, 3, 1, 1)-<213>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<17> -> (1, 3, 1, 1)-<214>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<205> -> (1, 3, 1, 1)-<215>
[<BinaryOps.MUL: 3>, <UnaryOps.GT0: 6>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.DIV: 4>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3, 1, 1)-<194>, (1, 3, 1, 1)-<198>, (1, 3, 1, 1)-<201>, (1, 3, 1, 1)-<211>, (1, 3, 1, 1)-<212>, (1, 3, 1, 1)-<213>, (1, 3, 1, 1)-<214>, (1, 3, 1, 1)-<215> -> (1, 3, 1, 1)-<216>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<4> -> (3, 3, 1, 1)-<217>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (1, 3, 1, 1)-<189>, (1, 3, 1, 1)-<216>, (3, 3, 1, 1)-<217> -> (1, 3)-<218>
t.grad:  [[3.9988122  2.259649   0.00657341]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.ADD>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.ADD>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<219>
[<MovementOps.RESHAPE: 1>] : (1,)-<219> -> (1, 1)-<220>
[<MovementOps.EXPAND: 3>] : (1, 1)-<220> -> (1, 3)-<221>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<222>
[<MovementOps.RESHAPE: 1>] : (1,)-<222> -> (1, 1)-<223>
[<MovementOps.EXPAND: 3>] : (1, 1)-<223> -> (1, 3)-<224>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<221>, (1, 3)-<1>, (1, 3)-<224>, (1, 3)-<218> -> (1, 3)-<1>
MID optim |  True  | self.m[0].data [[0.74809754 0.42291456 0.00084549]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.ADD>
create <LB (1, 3) op:UnaryOps.RECIPROCAL>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 3) op:MovementOps.EXPAND>
create <LB (1, 3) op:BinaryOps.MUL>
create <LB (1, 3) op:BinaryOps.SUB>
assign <LB (1, 3) op:realized> <- <LB (1, 3) op:BinaryOps.SUB>

HIT <LB (3, 3) op:MovementOps.RESHAPE> <LB (3, 3, 1, 1) op:ProcessingOps.CONV>
k <LB (3, 3) op:BinaryOps.ADD>
x <LB (3, 3) op:MovementOps.RESHAPE>
create <LB (3, 3, 1, 1) op:MovementOps.RESHAPE>
[<MovementOps.RESHAPE: 1>] : (3, 3)-<139> -> (3, 3, 1, 1)-<225>
[<MovementOps.RESHAPE: 1>] : (1, 3)-<2> -> (3, 1, 1, 1)-<226>
[<MovementOps.RESHAPE: 1>] : (1, 3, 1, 1)-<216> -> (3, 1, 1, 1)-<227>
[<MovementOps.RESHAPE: 1>, <BinaryOps.ADD: 1>, <ProcessingOps.CONV: 1>] : (3, 3, 1, 1)-<225>, (3, 1, 1, 1)-<226>, (3, 1, 1, 1)-<227> -> (3, 3)-<228>
t.grad:  [[ 8.00714    4.53039    0.       ]
 [ 4.001754   2.2641678  0.       ]
 [-8.011475  -4.5328426  0.       ]]
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.ADD>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.ADD>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.POW>
create <LB (1,) op:LoadOps.FROMCPU>
create <LB (1, 1) op:MovementOps.RESHAPE>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.ADD>
create <LB (3, 3) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.MUL>
create <LB (1, 1) op:BinaryOps.ADD>
create <LB (1, 1) op:BinaryOps.POW>
create <LB (1, 1) op:BinaryOps.SUB>
create <LB (1, 1) op:UnaryOps.RECIPROCAL>
create <LB (3, 3) op:MovementOps.EXPAND>
create <LB (3, 3) op:BinaryOps.MUL>
create <LB (3, 3) op:BinaryOps.SUB>
assign <LB (3, 3) op:realized> <- <LB (3, 3) op:BinaryOps.SUB>
AFTER optim |  True  | self.m[0].data [[0.74809754 0.42291456 0.00084549]]
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<229>
[<BinaryOps.ADD: 1>] : (1,)-<141>, (1,)-<229> -> (1,)-<230>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<231>
[<MovementOps.RESHAPE: 1>] : (1,)-<231> -> (1, 1)-<232>
[<MovementOps.EXPAND: 3>] : (1, 1)-<232> -> (3, 3)-<233>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<234>
[<MovementOps.RESHAPE: 1>] : (1,)-<234> -> (1, 1)-<235>
[<MovementOps.EXPAND: 3>] : (1, 1)-<235> -> (3, 3)-<236>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<233>, (3, 3)-<54>, (3, 3)-<236>, (3, 3)-<228> -> (3, 3)-<54>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<237>
[<MovementOps.RESHAPE: 1>] : (1,)-<237> -> (1, 1)-<238>
[<MovementOps.EXPAND: 3>] : (1, 1)-<238> -> (1, 3)-<239>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<240>
[<MovementOps.RESHAPE: 1>] : (1,)-<240> -> (1, 1)-<241>
[<MovementOps.EXPAND: 3>] : (1, 1)-<241> -> (1, 3)-<242>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<239>, (1, 3)-<62>, (1, 3)-<242>, (1, 3)-<218>, (1, 3)-<218> -> (1, 3)-<62>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<243>
[<MovementOps.RESHAPE: 1>] : (1,)-<243> -> (1, 1)-<244>
[<MovementOps.EXPAND: 3>] : (1, 1)-<244> -> (3, 3)-<245>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<246>
[<MovementOps.RESHAPE: 1>] : (1,)-<246> -> (1, 1)-<247>
[<MovementOps.EXPAND: 3>] : (1, 1)-<247> -> (3, 3)-<248>
[<BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<245>, (3, 3)-<70>, (3, 3)-<248>, (3, 3)-<228>, (3, 3)-<228> -> (3, 3)-<70>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<249>
[<MovementOps.RESHAPE: 1>] : (1,)-<249> -> (1, 1)-<250>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<251>
[<MovementOps.RESHAPE: 1>] : (1,)-<251> -> (1, 1)-<252>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<253>
[<MovementOps.RESHAPE: 1>] : (1,)-<253> -> (1, 1)-<254>
[<MovementOps.RESHAPE: 1>] : (1,)-<141> -> (1, 1)-<255>
[<MovementOps.RESHAPE: 1>] : (1,)-<229> -> (1, 1)-<256>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<257>
[<MovementOps.RESHAPE: 1>] : (1,)-<257> -> (1, 1)-<258>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<259>
[<MovementOps.RESHAPE: 1>] : (1,)-<259> -> (1, 1)-<260>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<261>
[<MovementOps.RESHAPE: 1>] : (1,)-<261> -> (1, 1)-<262>
[<BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.POW: 5>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.SUB: 2>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>] : (1, 1)-<250>, (1, 1)-<252>, (1, 1)-<254>, (1, 1)-<255>, (1, 1)-<256>, (1, 1)-<258>, (1, 1)-<260>, (1, 1)-<262>, (1, 1)-<255>, (1, 1)-<256> -> (1, 1)-<263>
[<MovementOps.EXPAND: 3>] : (1, 1)-<263> -> (1, 3)-<264>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<265>
[<MovementOps.RESHAPE: 1>] : (1,)-<265> -> (1, 1)-<266>
[<MovementOps.EXPAND: 3>] : (1, 1)-<266> -> (1, 3)-<267>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<268>
[<MovementOps.RESHAPE: 1>] : (1,)-<268> -> (1, 1)-<269>
[<MovementOps.EXPAND: 3>] : (1, 1)-<269> -> (1, 3)-<270>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (1, 3)-<2>, (1, 3)-<264>, (1, 3)-<1>, (1, 3)-<239>, (1, 3)-<62>, (1, 3)-<242>, (1, 3)-<218>, (1, 3)-<218>, (1, 3)-<267>, (1, 3)-<270> -> (1, 3)-<2>
[<MovementOps.EXPAND: 3>] : (1, 1)-<263> -> (3, 3)-<271>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<272>
[<MovementOps.RESHAPE: 1>] : (1,)-<272> -> (1, 1)-<273>
[<MovementOps.EXPAND: 3>] : (1, 1)-<273> -> (3, 3)-<274>
[<LoadOps.FROMCPU: 1>] :  -> (1,)-<275>
[<MovementOps.RESHAPE: 1>] : (1,)-<275> -> (1, 1)-<276>
[<MovementOps.EXPAND: 3>] : (1, 1)-<276> -> (3, 3)-<277>
[<BinaryOps.SUB: 2>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <UnaryOps.RECIPROCAL: 7>, <BinaryOps.ADD: 1>, <BinaryOps.POW: 5>, <BinaryOps.ADD: 1>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>, <BinaryOps.MUL: 3>] : (3, 3)-<4>, (3, 3)-<271>, (3, 3)-<233>, (3, 3)-<54>, (3, 3)-<236>, (3, 3)-<228>, (3, 3)-<245>, (3, 3)-<70>, (3, 3)-<248>, (3, 3)-<228>, (3, 3)-<228>, (3, 3)-<274>, (3, 3)-<277> -> (3, 3)-<4>
########################################
